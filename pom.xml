<?xml version="1.0" encoding="UTF-8"?>
<!--

    eXist-db Open Source Native XML Database
    Copyright (C) 2014 The eXist-db Authors

    info@exist-db.org
    https://www.exist-db.org

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.exist-db.apps</groupId>
        <artifactId>monex-parent</artifactId>
        <version>4.3.0-SNAPSHOT</version>
        <relativePath>./monex-parent</relativePath>
    </parent>

    <artifactId>monex</artifactId>
    <packaging>pom</packaging>

    <name>Monex</name>

    <scm>
        <url>https://github.com/eXist-db/monex.git</url>
        <connection>scm:git:https://github.com/eXist-db/monex.git</connection>
        <developerConnection>scm:git:https://github.com/eXist-db/monex.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <templating.version>1.2.1</templating.version>

        <node.version>v18.12.1</node.version>
        <npm.version>9.1.3</npm.version>

        <!-- used in the EXPath Package Descriptor -->
        <package-name>http://exist-db.org/apps/monex</package-name>

        <console.module.namespace>http://exist-db.org/xquery/console</console.module.namespace>
        <console.module.java.classname>org.exist.console.xquery.ConsoleModule</console.module.java.classname>

        <db.api.6.test.port>10096</db.api.6.test.port>
        <db.api.7.test.port>10097</db.api.7.test.port>
    </properties>

    <modules>
        <module>db-api</module>
    </modules>

    <build>
        <resources>
            <resource>
                <directory>src/main/xar-resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>templates/**</include>
                    <include>data/**</include>
                </includes>
                <targetPath>xar-resources</targetPath>
            </resource>
            <resource>
                <directory>src/main/xar-resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>templates/**</exclude>
                    <exclude>data/**</exclude>
                </excludes>
                <targetPath>xar-resources</targetPath>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.github.monkeywie</groupId>
                    <artifactId>copy-rename-maven-plugin</artifactId>
                    <version>1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.exist-db.maven.plugins</groupId>
                    <artifactId>public-xar-repo-plugin</artifactId>
                    <version>1.2.0</version>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.46.0</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>resources</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.15.1</version>
                <executions>
                    <execution>
                        <!-- optional: looks nicer in your build log. -->
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <!-- optional: default phase is "generate-resources" -->
                        <phase>compile</phase>
                    </execution>
                    <execution>
                        <id>npm version bump</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>compile</phase>
                        <configuration>
                            <arguments>version --no-git-tag-version --allow-same-version=true ${project.version}
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>compile</phase>
                        <!-- Optional configuration which provides for running any npm command -->
                        <configuration>
                            <arguments>ci</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>gulp build</id>
                        <goals>
                            <goal>gulp</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                </executions>
                <configuration>
                    <nodeVersion>${node.version}</nodeVersion>
                    <npmVersion>${npm.version}</npmVersion>
                </configuration>
            </plugin>
            <plugin>
                <groupId>de.jutzig</groupId>
                <artifactId>github-release-plugin</artifactId>
                <version>1.6.0</version>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.plexus</groupId>
                        <artifactId>plexus-utils</artifactId>
                        <version>4.0.2</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>github-upload</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>release</goal>
                        </goals>
                        <inherited>false</inherited>
                        <configuration>
                            <description>monex</description>
                            <releaseName>v${project.version}</releaseName>
                            <tag>${project.version}</tag>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>${project.artifactId}*.xar</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>ro.kuberam.maven.plugins</groupId>
                <artifactId>kuberam-expath-plugin</artifactId>
                <executions>
                    <execution>
                        <id>create-xar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>make-xar</goal>
                        </goals>
                        <configuration>
                            <descriptor>xar-assembly.xml</descriptor>
                            <finalName>${package-final-name}</finalName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <configuration>
                    <useAgent>true</useAgent>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <tagNameFormat>@{project.version}</tagNameFormat>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-changes-plugin</artifactId>
                <version>2.12.1</version>
                <configuration>
                    <onlyCurrentVersion>true</onlyCurrentVersion>
                    <columnNames>Type, Summary</columnNames>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>github-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <!--
           Starts eXist-db 6.x.x inside Docker for the purposes of Integration Testing
           -->
            <id>docker-integration-test-db-api-6</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <docker.integration-test.db-image>existdb/existdb</docker.integration-test.db-image>
                <docker.integration-test.db-api-6.dir>${project.build.directory}/docker-integration-test/db-api-6</docker.integration-test.db-api-6.dir>
                <docker.integration-test.db-api-6.autodeploy.dir>${docker.integration-test.db-api-6.dir}/autodeploy</docker.integration-test.db-api-6.autodeploy.dir>
            </properties>
            <build>
                <plugins>
                    <!-- start up Server in Docker for integration-test -->
                    <plugin>
                        <groupId>com.github.monkeywie</groupId>
                        <artifactId>copy-rename-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare-db-api-6-autodeploy</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <fileSets>
                                        <fileSet>
                                            <sourceFile>${project.build.directory}/${project.artifactId}-${project.version}.xar</sourceFile>
                                            <destinationFile>${docker.integration-test.db-api-6.autodeploy.dir}/${project.artifactId}-${project.version}.xar</destinationFile>
                                        </fileSet>
                                    </fileSets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.exist-db.maven.plugins</groupId>
                        <artifactId>public-xar-repo-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare-db-api-6-autodeploy-deps</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>resolve</goal>
                                </goals>
                                <configuration>
                                    <repoUri>https://exist-db.org/exist/apps/public-repo</repoUri>
                                    <outputDirectory>${docker.integration-test.db-api-6.autodeploy.dir}</outputDirectory>
                                    <existDbVersion>${db.api.6.impl.version}</existDbVersion>
                                    <packages>
                                        <package>
                                            <abbrev>templating</abbrev>
                                            <version>${templating.version}</version>
                                        </package>
                                    </packages>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <verbose>true</verbose>
                            <images>
                                <image>
                                    <alias>db-api-6-monex-tests</alias>
                                    <name>${docker.integration-test.db-image}:${db.api.6.impl.version}</name>
                                    <run>
                                        <containerNamePattern>%a-%i</containerNamePattern>
                                        <ports>
                                            <port>${db.api.6.test.port}:8080</port>
                                        </ports>
                                        <volumes>
                                            <bind>
                                                <volume>${docker.integration-test.db-api-6.autodeploy.dir}:/exist/autodeploy</volume>
                                            </bind>
                                        </volumes>
                                        <wait>
                                            <log>Server has started, listening on</log>
                                            <time>120000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>docker-db-api-6-it-start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>docker-db-api-6-it-stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!--
            Starts Elemental 7.x.x inside Docker and Deploys Monex for the purposes of Integration Testing

            NOTE(AR) Could be swapped out for eXist-db 7.0.0 if it is released, but leaving it as Elemental does no harm either
            -->
            <id>docker-integration-test-db-api-7</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <docker.integration-test.db-image>evolvedbinary/elemental</docker.integration-test.db-image>
                <docker.integration-test.db-api-7.dir>${project.build.directory}/docker-integration-test/db-api-7</docker.integration-test.db-api-7.dir>
                <docker.integration-test.db-api-7.autodeploy.dir>${docker.integration-test.db-api-7.dir}/autodeploy</docker.integration-test.db-api-7.autodeploy.dir>
            </properties>
            <build>
                <plugins>
                    <!-- start up Server in Docker for integration-test -->
                    <plugin>
                        <groupId>com.github.monkeywie</groupId>
                        <artifactId>copy-rename-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare-db-api-7-autodeploy</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <fileSets>
                                        <fileSet>
                                            <sourceFile>${project.build.directory}/${project.artifactId}-${project.version}.xar</sourceFile>
                                            <destinationFile>${docker.integration-test.db-api-7.autodeploy.dir}/${project.artifactId}-${project.version}.xar</destinationFile>
                                        </fileSet>
                                    </fileSets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.exist-db.maven.plugins</groupId>
                        <artifactId>public-xar-repo-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare-db-api-7-autodeploy-deps</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>resolve</goal>
                                </goals>
                                <configuration>
                                    <repoUri>https://exist-db.org/exist/apps/public-repo</repoUri>
                                    <outputDirectory>${docker.integration-test.db-api-7.autodeploy.dir}</outputDirectory>
                                    <existDbVersion>${db.api.7.impl.version}</existDbVersion>
                                    <packages>
                                        <package>
                                            <abbrev>templating</abbrev>
                                            <version>${templating.version}</version>
                                        </package>
                                    </packages>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <verbose>true</verbose>
                            <images>
                                <image>
                                    <alias>db-api-7-monex-tests</alias>
                                    <name>${docker.integration-test.db-image}:${db.api.7.impl.version}</name>
                                    <run>
                                        <containerNamePattern>%a-%i</containerNamePattern>
                                        <ports>
                                            <port>${db.api.7.test.port}:8080</port>
                                        </ports>
                                        <volumes>
                                            <bind>
                                                <volume>${docker.integration-test.db-api-7.autodeploy.dir}:/elemental/autodeploy</volume>
                                            </bind>
                                        </volumes>
                                        <wait>
                                            <log>Server has started, listening on</log>
                                            <time>120000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>docker-db-api-7-it-start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>docker-db-api-7-it-stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!--
            Cypress is used for integration tests, this profile enables Cypress and eXist-db 6.x.x without recording support (see cypress.io).
            -->
            <id>cypress-without-recording-db-api-6</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>exec-cypress-without-recording-db-api-6</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>npx</executable>
                                    <arguments>
                                        <argument>cypress</argument>
                                        <argument>run</argument>
                                        <argument>--config</argument>
                                        <argument>baseUrl=http://localhost:${db.api.6.test.port}/exist</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!--
            Cypress is used for integration tests, this profile enables Cypress and Elemental 7.x.x without recording support (see cypress.io).
            -->
            <id>cypress-without-recording-db-api-7</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>exec-cypress-without-recording-db-api-7</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>npx</executable>
                                    <arguments>
                                        <argument>cypress</argument>
                                        <argument>run</argument>
                                        <argument>--config</argument>
                                        <argument>baseUrl=http://localhost:${db.api.7.test.port}/exist</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!--
            Cypress is used for integration tests, this profile enables to run Cypress and eXist-db 6.x.x with recording support (see cypress.io), e.g. for CI.
            -->
            <id>cypress-with-recording-db-api-6</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>exec-cypress-with-recording-db-api-6</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>npx</executable>
                                    <arguments>
                                        <argument>cypress</argument>
                                        <argument>run</argument>
                                        <argument>--config</argument>
                                        <argument>baseUrl=http://localhost:${db.api.6.test.port}/exist</argument>
                                        <argument>--</argument>
                                        <argument>--record</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!--
            Cypress is used for integration tests, this profile enables to run Cypress and Elemental 7.x.x with recording support (see cypress.io), e.g. for CI.
            -->
            <id>cypress-with-recording-db-api-7</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>exec-cypress-with-recording-db-api-7</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>npx</executable>
                                    <arguments>
                                        <argument>cypress</argument>
                                        <argument>run</argument>
                                        <argument>--config</argument>
                                        <argument>baseUrl=http://localhost:${db.api.7.test.port}/exist</argument>
                                        <argument>--</argument>
                                        <argument>--record</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

    <pluginRepositories>
        <pluginRepository>
            <id>clojars.org</id>
            <url>http://clojars.org/repo</url>
        </pluginRepository>
    </pluginRepositories>
</project>
